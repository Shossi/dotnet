trigger:
- main

pool:
  name: 'Default'

jobs:
- job: Build
  displayName: 'Build job'
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x' 
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # - task: SonarQubePrepare@4
  #   condition: eq(variables['Build.SourceBranchName'], 'feature/sonarqube')  # Run only on 'feature/sonarqube' branch
  #   inputs:
  #     SonarQube: 'SonarQubeConnection'  # Replace with your actual service connection name
  #     scannerMode: 'MSBuild'
  #     projectKey: 'your-project-key'  # Replace with your SonarQube project key
  #     projectName: 'your-project-name'

  - script: dotnet build -c Release -o $(Build.ArtifactStagingDirectory)
    displayName: 'Build project'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'

- job: Test
  displayName: 'Test job'
  dependsOn: Build
  steps:
  - script: dotnet test
    displayName: 'Run tests'

- job: Publish
  displayName: 'Publish job'
  dependsOn: Test
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: 'drop'
      path: '$(Pipeline.Workspace)/drop'
  
  - task: UniversalPackages@0
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: 'fb34e676-860d-42fb-b174-75c46291e03f/954a6374-e3f9-4513-881c-4489225f54b4'
      vstsFeedPackagePublish: 'random'
      versionOption: 'patch'
      patvar: 'PAT' 
