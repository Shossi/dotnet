trigger:
- main

pool:
  name: 'Default'

jobs:
- job: Build
  displayName: 'Build job'
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration Release'
    displayName: 'Build project'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'pack'
      projects: '**/*.csproj'
      arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    displayName: 'Pack NuGet package'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'

- job: Test
  displayName: 'Test job'
  dependsOn: Build
  steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: '**/*.csproj'
      arguments: '--configuration Release'
    displayName: 'Run tests'

- job: Publish
  displayName: 'Publish job'
  dependsOn: Test
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: 'drop'
      path: '$(Pipeline.Workspace)/drop'

  - task: NuGetAuthenticate@0
    displayName: 'Authenticate to NuGet feed'
  
  - task: NuGetCommand@2
    inputs:
      command: 'push'
      packagesToPush: '$(Pipeline.Workspace)/drop/*.nupkg'
      publishVstsFeed: 'fb34e676-860d-42fb-b174-75c46291e03f/your-feed-name'
    displayName: 'Push NuGet package'

  - task: UniversalPackages@0
    inputs:
      command: 'publish'
      publishDirectory: '$(Pipeline.Workspace)/drop'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: 'fb34e676-860d-42fb-b174-75c46291e03f/your-feed-name'
      vstsFeedPackagePublish: 'first'
      versionOption: 'patch'
      patvar: 'PAT'
